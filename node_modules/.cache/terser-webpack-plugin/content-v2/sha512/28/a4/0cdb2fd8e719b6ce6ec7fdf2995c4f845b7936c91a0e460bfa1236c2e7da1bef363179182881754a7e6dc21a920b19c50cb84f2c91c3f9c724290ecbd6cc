{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{413:function(t,a,s){\"use strict\";s.r(a);var r=s(54),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"react-router\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-router\"}},[t._v(\"#\")]),t._v(\" React-Router\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"路由主要有\"),s(\"code\",[t._v(\"hash\")]),t._v(\"和\"),s(\"code\",[t._v(\"history\")]),t._v(\"和\"),s(\"code\",[t._v(\"memory\")]),t._v(\"三种方式\")]),t._v(\" \"),s(\"p\",[t._v(\"实现了无刷新页面的改变页面路由,根据路由展示相应的组件\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-使用react-router、react-router-dom实现路由\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-使用react-router、react-router-dom实现路由\"}},[t._v(\"#\")]),t._v(\" 1. 使用react-router、react-router-dom实现路由\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"react-router:路由核心库，实现路由功能，与环境无关\")]),t._v(\" \"),s(\"p\",[t._v(\"react-router-dom: 依赖环境能力加核心库能力实现路由功能(类似\"),s(\"code\",[t._v(\"react\")]),t._v(\"与\"),s(\"code\",[t._v(\"react-dom\")]),t._v(\"关系)\")]),t._v(\" \"),s(\"p\",[t._v(\"通过\"),s(\"code\",[t._v(\"HashRouter\")]),t._v(\"、\"),s(\"code\",[t._v(\"BrowserRouter\")]),t._v(\"、\"),s(\"code\",[t._v(\"Switch\")]),t._v(\"等组件对路由进行动态管理\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-router\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-router\"}},[t._v(\"#\")]),t._v(\" 1.Router\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"只提供路由匹配模式,和产生一个\"),s(\"code\",[t._v(\"私有\")]),t._v(\"的上下文供后续子组件使用\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"HashRouter:是通过\"),s(\"code\",[t._v(\"hash\")]),t._v(\"的方式实现\")]),t._v(\" \"),s(\"li\",[t._v(\"BrowserRouter:是通过\"),s(\"code\",[t._v(\"history\")]),t._v(\"方式实现\")]),t._v(\" \"),s(\"li\",[t._v(\"MemoryRouter:内存路由,通常在移动端和测试使用\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"示例\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"Route\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"Switch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"react-router-dom\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('//   <Route path=\"/login\" exact component={组件}/>')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('//   <Route path=\"/register\" exact component={组件}/>')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('//   <Route path=\"/update\" exact component={组件}/>')]),t._v(\"\\n            \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('//   <Route path=\"/\" component={组件}/>')]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"BrowserRouter/HashRouter: 它不做展示功能，但是它会产生一个上下文，记录路由的操作(history)、信息(location)、匹配信息(match),此上下文开发者可以通过高阶组件\"),s(\"code\",[t._v(\"withRouter\")]),t._v(\"得到\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"Route\")]),t._v(\"组件能够获取到该上下文，并且通过属性(props)的方式传递给子组件\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-route\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-route\"}},[t._v(\"#\")]),t._v(\" 2. Route\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"根据不同的路由显示不同的组件\")]),t._v(\" \"),s(\"p\",[t._v(\"必须作为Router子组件即可,可以出现在任意位置\")]),t._v(\" \"),s(\"p\",[t._v(\"children  > component > render\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"path: 匹配的路径规则，不区分大小写(\"),s(\"em\",[t._v(\"sensitive精确匹配\")]),t._v(\"),没有值默认匹配任意路径\")]),t._v(\" \"),s(\"li\",[t._v(\"component: 匹配成功后展示的组件。\"),s(\"em\",[t._v(\"优先级比reader靠后\")])]),t._v(\" \"),s(\"li\",[t._v(\"render: 返回组件供显示用,只能为函数。\"),s(\"em\",[t._v(\"优先级比children靠后\")])]),t._v(\" \"),s(\"li\",[t._v(\"children: 尝试匹配后就会进行渲染(未匹配成功也会渲染)并且忽略component,children可以为jsx元素，或者为函数，参数为上下文内容，渲染其返回值\")]),t._v(\" \"),s(\"li\",[t._v(\"sensitive: 区分大小写,敏感匹配\")]),t._v(\" \"),s(\"li\",[t._v(\"exact: 精确匹配\")]),t._v(\" \"),s(\"li\",[t._v(\"strict: 是否匹配最后一个斜杠\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_3-switch组件\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-switch组件\"}},[t._v(\"#\")]),t._v(\" 3. Switch组件\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Switch\")]),t._v(\"组件其子组件必须为\"),s(\"code\",[t._v(\"Route\")]),t._v(\"组件\\n它会遍历其子元素进行匹配，当匹配到一个后结束\\n在实际渲染中它只存在一个子组件\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"示例\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"Route\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"Switch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"react-router-dom\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"Switch\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n              \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"Route path\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"/login\"')]),t._v(\" exact component\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"组件\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n              \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"Route path\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"/register\"')]),t._v(\" exact component\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"组件\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n              \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"Route path\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"/update\"')]),t._v(\" exact component\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"组件\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n              \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"Route path\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"/\"')]),t._v(\" component\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"组件\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"    \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 如果没有匹配成功就显示该组件\")]),t._v(\"\\n          \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"Switch\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"BrowserRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"_4-withrouter\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-withrouter\"}},[t._v(\"#\")]),t._v(\" 4. withRouter\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"Router\")]),t._v(\" 产生的上下文对开发者关闭，对直接子组件通过属性传递，孙子组件需要通过多次传递才能获取\\n通过高阶组件\"),s(\"code\",[t._v(\"withRouter\")]),t._v(\"获取到上下文传递\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"示例\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"withRouter\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"react-router-dom\"')]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Login\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"props\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在Login组件使用history对象进行跳转\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"export\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"default\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withRouter\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"Login\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 高阶组件获取路由上下文，并将该上下文通过属性传递\")]),t._v(\"\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"_5-link\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-link\"}},[t._v(\"#\")]),t._v(\" 5. Link\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"具有无刷新页面跳转功能的组件\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"属性\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"to: Object/string\")]),t._v(\" \"),s(\"li\",[t._v(\"replace:bool\")]),t._v(\" \"),s(\"li\",[t._v(\"innerRef:ref转发至真实a标签\")])]),t._v(\" \"),s(\"ol\",{attrs:{start:\"2\"}},[s(\"li\",[t._v(\"模拟Link组件\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"MyLink\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"props\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"a href\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"props\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"to\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" onClick\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"e\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        e\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"preventDefault\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        props\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"history\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"push\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"props\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"to\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"props\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"children\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"a\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" MyLinkW \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"withRouter\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"MyLink\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\")])])]),s(\"h3\",{attrs:{id:\"_6-navlink\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-navlink\"}},[t._v(\"#\")]),t._v(\" 6. NavLink\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"带样式的Link组件\\n根据路由确定是否匹配成功(决定是否拥有类名)\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"activeClassName:匹配成功时需要添加的类名\")]),t._v(\" \"),s(\"li\",[t._v(\"activeStyle:匹配成功时生效的内联样式\")]),t._v(\" \"),s(\"li\",[t._v(\"exact:匹配是否精确\")]),t._v(\" \"),s(\"li\",[t._v(\"sensitive:是否区分大小写\")]),t._v(\" \"),s(\"li\",[t._v(\"strict:是否严格匹配最后一个斜杠\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_7-redirect\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-redirect\"}},[t._v(\"#\")]),t._v(\" 7. Redirect\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"重定向组件:匹配成功自动跳转目标地址\\n测试后:需要搭配\"),s(\"code\",[t._v(\"Switch\")]),t._v(\"组件,直接使用无刷新跳转该页后无法匹配该组件的\"),s(\"code\",[t._v(\"from\")])])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"from: 匹配规则\")]),t._v(\" \"),s(\"li\",[t._v(\"to: 目标地址\")]),t._v(\" \"),s(\"li\",[t._v(\"其余同\"),s(\"code\",[t._v(\"Link\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"router上下文\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#router上下文\"}},[t._v(\"#\")]),t._v(\" Router上下文\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"使用BrowserRouter/HashRouter: 会产生一个上下文，记录路由的操作(history)、信息(location)、匹配信息(match),此上下文对开发者关闭\\n子组件不能直接访问该上下文,起直接子组件通过\"),s(\"code\",[t._v(\"props\")]),t._v(\"获取到\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-history\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-history\"}},[t._v(\"#\")]),t._v(\" 1.history\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[s(\"code\",[t._v(\"history\")]),t._v(\"库进行创建该对象\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"go(step):前往第几页\")]),t._v(\" \"),s(\"li\",[t._v(\"goBack():相当于go(-1)\")]),t._v(\" \"),s(\"li\",[t._v(\"goForward():相当于go(1)\")]),t._v(\" \"),s(\"li\",[t._v(\"push(path,state):向栈中加入一个地址\")]),t._v(\" \"),s(\"li\",[t._v(\"replace(path,state):替换栈中当前地址\")]),t._v(\" \"),s(\"li\",[t._v(\"location:等同上下文中的location\")]),t._v(\" \"),s(\"li\",[t._v(\"listen(listenner):监听路由的变化\")]),t._v(\" \"),s(\"li\",[t._v(\"block(prompt):设置阻塞,配合\"),s(\"code\",[t._v(\"Route\")]),t._v(\"组件\"),s(\"code\",[t._v(\"getUserConfirmation?: (message: string, callback: (ok: boolean) => void) => void;\")]),t._v(\"实现路由守卫\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-location\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-location\"}},[t._v(\"#\")]),t._v(\" 2. location\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"hash:hash部分\")]),t._v(\" \"),s(\"li\",[t._v(\"key:用于区分该库自己的状态数据\")]),t._v(\" \"),s(\"li\",[t._v(\"pathname:路径\")]),t._v(\" \"),s(\"li\",[t._v(\"search:\"),s(\"code\",[t._v(\"?\")]),t._v(\"后面\")]),t._v(\" \"),s(\"li\",[t._v(\"state:数据\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_3-match\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-match\"}},[t._v(\"#\")]),t._v(\" 3. match\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"基于\"),s(\"code\",[t._v(\"path-to-regexp\")]),t._v(\"完成match对象构建\")])]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"params:路由参数\")]),t._v(\" \"),s(\"li\",[t._v(\"path: 匹配路由的规则\")]),t._v(\" \"),s(\"li\",[t._v(\"url: 匹配上的值\")]),t._v(\" \"),s(\"li\",[t._v(\"isExact:path和实际url是否相等\")])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}